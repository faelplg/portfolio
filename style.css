/*
Structure

Style structure defines containers behavior and the default structures for content display. I've organized the structure categories as follows:

* 1.1. Code indentation
* 1.2. Responsivity checkpoints
* 1.3. Reset styles
* 1.4. General & Wrappers
* 1.5. Flexible container
* 1.6. Flexible boxes
* 1.7. Flexible alignment
* 1.8. Imports

Styleguide 1
*/

/*
Code indentation

* Use two (2) spaces for indentation.
* Use dashes (`prefix-suffix`) to separate words.
* Use [BEM](http://getbem.com/) convention, e.g. block__element--modifier.
* Use classes for reusability and to reduce conflicts.
* Use ids for state-specific cases.

Styleguide 1.1
*/

/*
Responsivity checkpoints

--phone-only:            599px   - Phone max-width.
--tablet-portrait-min:   600px   - Tablet portrait min-width.
--tablet-portrait-max:   899px   - Tablet portrait max-width.
--tablet-landscape-min:  900px   - Tablet landscape min-width.
--tablet-landscape-max:  1279px  - Tablet landscape max-width.
--desktop-min:           1280px  - Regular desktop min-width.
--desktop-max:           1799px  - Regular desktop max-width.
--big-desktop_min:       1800px  - Large desktop min-width.

Styleguide 1.2
*/
:root {
  --phone-only: 599px;
  --tablet-portrait-min: 600px;
  --tablet-portrait-max: 899px;
  --tablet-landscape-min: 900px;
  --tablet-landscape-max: 1279px;
  --desktop-min: 1280px;
  --desktop-max: 1799px;
  --big-desktop_min: 1800px;
}

/*
Reset styles

The reset is a strategy for avoiding browser inconsistencies regards the default properties for general HTML elements.
**Adapted from source:** [meyerweb](http://meyerweb.com/eric/tools/css/reset/) v2.0 | 20110126. *License: none (public domain)*

Styleguide 1.3
*/
html, body, div, span, applet, object, iframe, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  /* font-size: 100%; */
  /* font: inherit; */
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
	display: block;
}
/** Disabled body line-height. */
/* body {
	line-height: 1;
} */
/** Reset button:focus outline. */
button:focus {
  outline: none;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
a {
  text-decoration: none;
  cursor: pointer;
}

/*
Wrapper

Remove overflow from the body. Set the full height for main structures.
Set initial structure behavior for containers like `DIV` and `SECTION`.

.wrapper       - Main wrapper for full height.
.full-height   - Force height 100%.
.full-width    - Force width 100%.

Styleguide 1.4
*/
html,
body,
.wrapper,
.full-height {
  height: 100%;
}
.full-width {
  width: 100%;
}
html,
body{
  overflow: hidden;
}
section,
.wrapper {
  overflow-y: auto;
  overflow-x: hidden;
}
/* Native containers. */
div, section, header, aside, fieldset {
  box-sizing: border-box;
}

/*
Flexible container

.container              - Default flex container class.
.container--full        - Keep properties from default container on the mobile resolution.
.container--dense       - A container with lowest padding.
.container--raw         - A container with no padding.
.container--horizontal  - Horizontal direction; `flex-flow: row;`.
.container--vertical    - Vertical direction; `flex-flow: column;`.

Styleguide 1.5
*/
.container {
  display: flex;
  padding: 16px;
}
/* --tablet-landscape-max */
@media only screen and (max-width: 1279px) {
  .container {
    padding: 8px;
  }
  .container--full {
    padding: 16px;
  }
}
.container--dense {
  padding: 8px;
}
.container--raw {
  padding: 0;
}
.container,
.container--vertical {
  flex-flow: column;
}
.container--horizontal,
.container--mobile-responsive,
.container--responsive {
  flex-flow: row;
}
.container--horizontal.container--wrap {
  flex-flow: row wrap;
}
@media only screen and (max-width: 599px) {
  .container--mobile-responsive,
  .container--responsive {
    flex-flow: column;
  }
}
@media only screen and (min-width: 600px) and (max-width: 1279px) {
  .container--responsive {
    flex-flow: column;
  }
}
.container--center {
  margin-left: 33%;
  margin-right: 33%;
}
/* --tablet-landscape-max */
@media only screen and (min-width: 1279px) {
  .container--center {
    margin-left: 23%;
    margin-right: 23%;
  }
}
@media only screen and (min-width: 600px) and (max-width: 1279px) {
  .container--center {
    margin-left: 10%;
    margin-right: 10%;
  }
}
@media only screen and (max-width: 599px) {
  .container--center {
    margin-left: 3%;
    margin-right: 3%;
  }
}

/*
Flexible boxes

.box          - Default flexible box with `flex: auto;` property.
.box--shrink  - Flexible box with `flex: initial` (no shrink) property.
.box--squeeze - Flexible box with `flex: 0` (no shrink) property.

Styleguide 1.6
*/
.box {
  flex: auto;
}
.box--shrink {
  flex: initial;
}
.box--first {
  order: -1;
}

/*
Flexible alignment

.align-items--start      - Align (children) start.
.align-items--center     - Align (children) center.
.align-items--end        - Align (children) end.
.justify-content--start  - Justify items on start.
.justify-content--center - Justify items on center.
.justify-content--end    - Justify items on end.

Styleguide 1.7
*/
.align-items--start {
  align-items: flex-start;
}
.align-items--center {
  align-items: center;
}
.align-items--end {
  align-items: flex-end;
}
.justify-content--start {
  justify-content: flex-start;
}
.justify-content--center {
  justify-content: center;
}
.justify-content--end {
  justify-content: flex-end;
}
@media only screen and (min-width: 1280px) {
  .container--mobile-responsive.left {
    justify-content: flex-end;
  }
}

/*
Post-imports

* Theme wrapper: `@import './theme/theme.css';`

Styleguide 1.8
*/
@import './theme/theme.css';
@import './states.css';
